{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","getSelectedTab","className","map","tab","classNames","id","href","onClick","title","content","App","useState","setSelectedTabId","find","ReactDOM","render","document","getElementById"],"mappings":"8MAgBaA,EAAuB,SAAC,GAO/B,IAAD,EALDC,EAKC,EALDA,KACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,eAGF,OACE,qCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GACR,OACE,oBACEF,UACEG,IAAW,CAAE,YAAaD,EAAIE,KAAOP,IAFzC,SAME,mBACEQ,KAAI,WAAMH,EAAIE,IACdE,QAAS,kBAAMR,EAAcI,EAAIE,KAFnC,SAIGF,EAAIK,SANFL,EAAIE,WAcnB,qBAAKJ,UAAU,QAAQ,UAAQ,cAA/B,mBACGD,WADH,aACG,EAAkBS,cC7CdZ,EAAc,CACzB,CAAEQ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAAS,SAAnD,mBAAOb,EAAP,KAAsBc,EAAtB,KAEMZ,EAAiB,WACrB,OAAOH,EAAKgB,MAAK,SAAAV,GAAG,OAAIL,IAAkBK,EAAIE,OAGhD,OACE,sBAAKJ,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,0CAEGD,WAFH,aAEG,EAAkBQ,SAGrB,8BACE,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfC,cAAea,EACfZ,eAAgBA,UCzB1Bc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.694f65ed.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nexport type Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tabId: string) => void,\n  getSelectedTab: () => Tab | undefined,\n};\n\nexport const Tabs:React.FC<Props> = (\n  {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n    getSelectedTab,\n  },\n) => {\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                className={\n                  classNames({ 'is-active': tab.id === selectedTabId })\n                }\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  onClick={() => onTabSelected(tab.id)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {getSelectedTab()?.content}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Tab, Tabs } from './components/Tabs/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const getSelectedTab = () => {\n    return tabs.find(tab => selectedTabId === tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {getSelectedTab()?.title}\n      </h1>\n\n      <div>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTabId}\n          onTabSelected={setSelectedTabId}\n          getSelectedTab={getSelectedTab}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}